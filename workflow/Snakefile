'''Snakefile for MIS preparation
   Version 1.0'''

from scripts.parse_config_imputePrep import parser

configfile: 'config/config.yaml'
shell.executable('/bin/bash')

BPLINK = ['bed', 'bim', 'fam']
OUTDIR = config["out_dir"]

CHROM, COHORT, INPATH, keep_command = parser(config)

localrules: all

if config['check_vcf']:
    rule all:
        input:
            expand('{outdir}/log/{cohort}_chr{chrom}.check.log',
                   cohort=COHORT, chrom=CHROM, outdir = OUTDIR)
else:
    rule all:
        input:
            expand('{outdir}/final/{cohort}_chr{chrom}.vcf.gz',
                   cohort=COHORT, chrom=CHROM, outdir = OUTDIR)

include: 'part1.smk'

if config['chr_callrate']:
    include: 'chr_callrate.smk'
elif config['chunk_callrate']:
    include: 'chunk_callrate.smk'
else:
    rule compress_vcf_nocallrate:
        input: rules.split_to_vcf.output
        output: '{outdir}/final/{cohort}_chr{chrom}.vcf.gz'
        threads: 8
        conda: 'envs/bcftools.yaml'
        shell:
            '''
    bcftools sort -Oz -o {output} {input}
    bcftools index -t {output}
    '''

rule apply_irem:
    input:
        irem = '{outdir}/callrate/{cohort}/chrall.irem',
        vcf = '{outdir}/{cohort}_chr{chrom}_preCallcheck.vcf.gz',
        tbi = '{outdir}/{cohort}_chr{chrom}_preCallcheck.vcf.gz.tbi'
    output: '{outdir}/final/{cohort}_chr{chrom}.vcf.gz'
    conda: 'envs/bcftools.yaml'
    shell:
        '''
bcftools view -S ^{input.irem} -Oz -o {output} {input.vcf}
bcftools index -t {output}
'''

if config['check_vcf']:
    rule check_vcf:
        input:
            fasta = config['ref'],
            vcf = '{outdir}/final/{cohort}_chr{chrom}.vcf.gz'
        output:
            '{outdir}/log/{cohort}_chr{chrom}.check.log'
        params:
            py_env = config['checkEnv']
        log: '{outdir}/log/{cohort}_chr{chrom}'
        shell:
            'source activate {params.py_env}; '
            'python scripts/checkVCF.py -r {input.fasta} -o {log} {input.vcf}'
